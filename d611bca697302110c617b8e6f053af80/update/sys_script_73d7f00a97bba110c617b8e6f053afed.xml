<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>false</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_935283_pia_privacy_impact_assessment</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Data Subject List</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/ ) {

        // Add your code here
        var dataSubjectList = current.data_subjects.toString();
        var prevSubjectList = previous.data_subjects.toString();
        var currSplitResult = dataSubjectList.split(',');
        var prevSplitResult = prevSubjectList.split(',');
	
        for (var i = 0; i < currSplitResult.length; i++) {
            if (prevSplitResult.indexOf(currSplitResult[i]) == -1) //-1 is not on the l
            {
                var dsPDP = new GlideRecord('x_935283_pia_data_subject_personal_data_processed');
                dsPDP.addQuery('pia', current.getUniqueValue());
                dsPDP.query();
                var rowCount = dsPDP.getRowCount();
                if (rowCount >= 0) {
                    if (dsPDP.data_subject_element != currSplitResult[i] && currSplitResult[i] != "") {

                        dsPDP.initialize();
                        dsPDP.pia = current.getUniqueValue();
                        dsPDP.data_subject_element = currSplitResult[i];
                        dsPDP.insert();
                    }
                }
            }
        }
        for (var j = 0; j < prevSplitResult.length; j++) {
            if (currSplitResult.indexOf(prevSplitResult[j]) == -1) //-1 is not on the list
            {
                var dsPDPdelete = new GlideRecord('x_935283_pia_data_subject_personal_data_processed');
                dsPDPdelete.addQuery('pia', current.getUniqueValue());
                dsPDPdelete.addQuery('data_subject_element', prevSplitResult[j]);
                dsPDPdelete.query();
                dsPDPdelete.next();
                dsPDPdelete.deleteRecord();

            }
        }
    }
)(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>fbautista</sys_created_by>
        <sys_created_on>2023-07-04 07:13:25</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>73d7f00a97bba110c617b8e6f053afed</sys_id>
        <sys_mod_count>84</sys_mod_count>
        <sys_name>Data Subject List</sys_name>
        <sys_overrides/>
        <sys_package display_value="Privacy Impact Assessment" source="x_935283_pia">d611bca697302110c617b8e6f053af80</sys_package>
        <sys_policy>protected</sys_policy>
        <sys_scope display_value="Privacy Impact Assessment">d611bca697302110c617b8e6f053af80</sys_scope>
        <sys_update_name>sys_script_73d7f00a97bba110c617b8e6f053afed</sys_update_name>
        <sys_updated_by>blopez</sys_updated_by>
        <sys_updated_on>2024-01-19 06:45:48</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=73d7f00a97bba110c617b8e6f053afed"/>
</record_update>
